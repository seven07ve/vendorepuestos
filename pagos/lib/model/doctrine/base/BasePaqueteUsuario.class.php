<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PaqueteUsuario', 'doctrine');

/**
 * BasePaqueteUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_paquete
 * @property integer $id_usuario
 * @property enum $usuario_tienda
 * @property timestamp $fecha_activacion
 * @property enum $estado
 * @property decimal $monto
 * 
 * @method integer        getId()               Returns the current record's "id" value
 * @method integer        getIdPaquete()        Returns the current record's "id_paquete" value
 * @method integer        getIdUsuario()        Returns the current record's "id_usuario" value
 * @method enum           getUsuarioTienda()    Returns the current record's "usuario_tienda" value
 * @method timestamp      getFechaActivacion()  Returns the current record's "fecha_activacion" value
 * @method enum           getEstado()           Returns the current record's "estado" value
 * @method decimal        getMonto()            Returns the current record's "monto" value
 * @method PaqueteUsuario setId()               Sets the current record's "id" value
 * @method PaqueteUsuario setIdPaquete()        Sets the current record's "id_paquete" value
 * @method PaqueteUsuario setIdUsuario()        Sets the current record's "id_usuario" value
 * @method PaqueteUsuario setUsuarioTienda()    Sets the current record's "usuario_tienda" value
 * @method PaqueteUsuario setFechaActivacion()  Sets the current record's "fecha_activacion" value
 * @method PaqueteUsuario setEstado()           Sets the current record's "estado" value
 * @method PaqueteUsuario setMonto()            Sets the current record's "monto" value
 * 
 * @package    ptoventavr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePaqueteUsuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('paquete_usuario');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('id_paquete', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_usuario', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('usuario_tienda', 'enum', 1, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => '1',
              1 => '2',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('fecha_activacion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('estado', 'enum', 1, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => '0',
              1 => '1',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('monto', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}