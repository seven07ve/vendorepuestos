<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Usuario', 'doctrine');

/**
 * BaseUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $telefono1
 * @property string $telefono2
 * @property string $pin
 * @property string $cedula
 * @property string $nombre
 * @property string $email
 * @property string $horario
 * @property integer $id_estado
 * @property integer $id_ciudad
 * @property string $datos_pago
 * @property string $datos_envio
 * @property string $datos_banco
 * @property timestamp $fecha_activacion
 * @property enum $certificado
 * @property enum $activo
 * @property Estado $Estado
 * @property Ciudad $Ciudad
 * @property Doctrine_Collection $Producto
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getTelefono1()        Returns the current record's "telefono1" value
 * @method string              getTelefono2()        Returns the current record's "telefono2" value
 * @method string              getPin()              Returns the current record's "pin" value
 * @method string              getCedula()           Returns the current record's "cedula" value
 * @method string              getNombre()           Returns the current record's "nombre" value
 * @method string              getEmail()            Returns the current record's "email" value
 * @method string              getHorario()          Returns the current record's "horario" value
 * @method integer             getIdEstado()         Returns the current record's "id_estado" value
 * @method integer             getIdCiudad()         Returns the current record's "id_ciudad" value
 * @method string              getDatosPago()        Returns the current record's "datos_pago" value
 * @method string              getDatosEnvio()       Returns the current record's "datos_envio" value
 * @method string              getDatosBanco()       Returns the current record's "datos_banco" value
 * @method timestamp           getFechaActivacion()  Returns the current record's "fecha_activacion" value
 * @method enum                getCertificado()      Returns the current record's "certificado" value
 * @method enum                getActivo()           Returns the current record's "activo" value
 * @method Estado              getEstado()           Returns the current record's "Estado" value
 * @method Ciudad              getCiudad()           Returns the current record's "Ciudad" value
 * @method Doctrine_Collection getProducto()         Returns the current record's "Producto" collection
 * @method Usuario             setId()               Sets the current record's "id" value
 * @method Usuario             setTelefono1()        Sets the current record's "telefono1" value
 * @method Usuario             setTelefono2()        Sets the current record's "telefono2" value
 * @method Usuario             setPin()              Sets the current record's "pin" value
 * @method Usuario             setCedula()           Sets the current record's "cedula" value
 * @method Usuario             setNombre()           Sets the current record's "nombre" value
 * @method Usuario             setEmail()            Sets the current record's "email" value
 * @method Usuario             setHorario()          Sets the current record's "horario" value
 * @method Usuario             setIdEstado()         Sets the current record's "id_estado" value
 * @method Usuario             setIdCiudad()         Sets the current record's "id_ciudad" value
 * @method Usuario             setDatosPago()        Sets the current record's "datos_pago" value
 * @method Usuario             setDatosEnvio()       Sets the current record's "datos_envio" value
 * @method Usuario             setDatosBanco()       Sets the current record's "datos_banco" value
 * @method Usuario             setFechaActivacion()  Sets the current record's "fecha_activacion" value
 * @method Usuario             setCertificado()      Sets the current record's "certificado" value
 * @method Usuario             setActivo()           Sets the current record's "activo" value
 * @method Usuario             setEstado()           Sets the current record's "Estado" value
 * @method Usuario             setCiudad()           Sets the current record's "Ciudad" value
 * @method Usuario             setProducto()         Sets the current record's "Producto" collection
 * 
 * @package    ptoventavr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('telefono1', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('telefono2', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('pin', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('cedula', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('horario', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_estado', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_ciudad', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('datos_pago', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('datos_envio', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('datos_banco', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('fecha_activacion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('certificado', 'enum', 1, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => '0',
              1 => '1',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('activo', 'enum', 1, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => '0',
              1 => '1',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Estado', array(
             'local' => 'id_estado',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('Ciudad', array(
             'local' => 'id_ciudad',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasMany('Productos as Producto', array(
             'local' => 'id',
             'foreign' => 'id_usuario_tienda'));
    }
}